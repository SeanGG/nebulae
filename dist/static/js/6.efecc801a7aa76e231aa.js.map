{"version":3,"sources":["webpack:///./src/page/turntable/turntable.vue?cbf7","webpack:///./src/page/turntable/turntable.vue","webpack:///./src/page/turntable/turntable.vue?9b9b","webpack:///./src/page/turntable/index.js","webpack:///./src/api/index.js","webpack:///./src/configs/index.js","webpack:///./src/utils/http.js","webpack:///src/page/turntable/turntable.vue"],"names":["turntable_turntablevue_type_script_lang_js","turntable_turntable","Object","componentNormalizer","_vm","this","_h","$createElement","_c","_self","staticClass","_l","item","index","key","class","currentIndex","on","click","startGame","_v","_s","directives","name","rawName","value","expression","attrs","type","domProps","input","$event","target","composing","giftKey","__webpack_exports__","env","console","log","configs","API_DAtestTA_getPrem","test1","module","exports","chunkMode","callApi","root","mockHost","host","vue__WEBPACK_IMPORTED_MODULE_1__","use","vue_resource__WEBPACK_IMPORTED_MODULE_2__","http","options","emulateJSON","emulateHTTP","get","opts","$http","url","query","data","_configs___WEBPACK_IMPORTED_MODULE_3___default","a","params","then","response","res","babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default","resolve","catch","err","reject","className","_this","getGift","frequency","interval","timer","goGift","_this2","_this3","appLink","page_udid","page_sessionid","render_html"],"mappings":"2GAAqNA,QAAA,UCkBrNC,EAXAC,OAAAC,EAAA,EAAAD,CACAF,ECRA,WAA0B,IAAAI,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,sBAAgCF,EAAA,OAAYE,YAAA,mBAA6BN,EAAAO,GAAAP,EAAA,uBAAAQ,EAAAC,GAAkD,OAAAL,EAAA,OAAkBM,IAAAD,EAAAE,MAAAF,IAAAT,EAAAY,aAAA,0CAAuF,IAAAH,EAAAL,EAAA,OAA0BE,YAAA,MAAAO,IAAsBC,MAAAd,EAAAe,aAAuBf,EAAAgB,GAAA,UAAAZ,EAAA,OAAAJ,EAAAgB,GAAA,IAAAhB,EAAAiB,GAAAR,YAA4D,GAAAT,EAAAgB,GAAA,KAAAZ,EAAA,OAA4BE,YAAA,mBAA6BF,EAAA,OAAYE,YAAA,mBAA6BF,EAAA,OAAYE,YAAA,oBAA8BN,EAAAgB,GAAA,iCAAAhB,EAAAgB,GAAA,KAAAZ,EAAA,OAAgEE,YAAA,qBAA+BF,EAAA,SAAcc,aAAaC,KAAA,QAAAC,QAAA,UAAAC,MAAArB,EAAA,QAAAsB,WAAA,YAAwEC,OAASC,KAAA,QAAcC,UAAWJ,MAAArB,EAAA,SAAsBa,IAAKa,MAAA,SAAAC,GAAyBA,EAAAC,OAAAC,YAAsC7B,EAAA8B,QAAAH,EAAAC,OAAAP,wBDW35B,EACA,KACA,KACA,cEXAU,EAAA,4BCQA,IAAMC,EAAM,aACZC,QAAQC,IAAI,UAAYF,GACxB,IAEMG,GACJC,qBAAA,iCACAC,MAAA,eAEFC,EAAOC,QAAUJ,oBCRjBG,EAAOC,SANLC,WAAW,EACXC,SAAS,EACTC,KAAM,GACNC,SAAU,8DACVC,KAAM,0HCNRC,EAAA,EAAIC,IAAIC,EAAA,GAERF,EAAA,EAAIG,KAAKC,QAAQC,aAAc,EAC/BL,EAAA,EAAIG,KAAKC,QAAQE,aAAc,EAQxB,IAqCMC,EAAM,SAACC,GAClB,IAAIC,EAAQT,EAAA,EAAIG,KAEZO,EAAMF,EAAKE,IACXC,EAAQH,EAAKI,KAEjB,OAAOH,EACJF,IAAIM,EAAAC,EAAOlB,QAAU,GAAGiB,EAAAC,EAAOf,KAASW,EAAM,GAAGG,EAAAC,EAAOhB,SAAaY,GACpEK,OAAQJ,IAETK,KAAK,SAAAC,GACJ,IAAIC,EAAMD,EAASL,KACnB,OAAOO,EAAAL,EAAQM,QAAQF,KAExBG,MAAM,SAAAC,GAGL,OAFAlC,QAAQC,IAAR,sBACAD,QAAQC,IAAIiC,GACLH,EAAAL,EAAQS,OAAOD,mGCzC5BpC,EAAA,QAEA,wEAMA,SAEA,oBAEA,aACA,OACA,YAEA,6IAWA,uDAEA,SAEAsC,uDASA,IAAAC,EAAArE,yEACA,wBAGAsE,sBACA,kFAEA,8CAIA3D,qEAEA,iBAEA,GAGA4D,yCAEAC,gBACAC,KACAC,qBACA,sBAEA,2BAGA,IAAAC,EAAA3E,0CAGAyE,yBAEA,eAEA,8CAGA,IAAAG,EAAA5E,aACA6B,aACAlB,oEAIAA,+FAMA,iBAEA,gBANA6D,IASAD,mCAQAvE,wBACA4D,KAAA,SAAAE,cAGAA,kCAIAe,6BAIA,uBAFAA,2GAOAC,sDAGAvB,8BACAD,uCACAyB,6CACAD,oCAGA9E,mBAEAsD,aACA,wDACA,WAEA,8BACAyB,wBAEA,2DAGAvB,IACAwB","file":"static/js/6.efecc801a7aa76e231aa.js","sourcesContent":["import mod from \"-!../../../node_modules/_babel-loader@7.1.4@babel-loader/lib/index.js!../../../node_modules/_vue-loader@15.0.7@vue-loader/lib/index.js??vue-loader-options!./turntable.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/_babel-loader@7.1.4@babel-loader/lib/index.js!../../../node_modules/_vue-loader@15.0.7@vue-loader/lib/index.js??vue-loader-options!./turntable.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./turntable.vue?vue&type=template&id=22722c00\"\nimport script from \"./turntable.vue?vue&type=script&lang=js\"\nexport * from \"./turntable.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.0.7@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"turntable-content\"},[_c('div',{staticClass:\"turntable-grid\"},[_vm._l((_vm.turntableList),function(item,index){return [_c('div',{key:index,class:index === _vm.currentIndex ? 'turntable-cell shine' : 'turntable-cell'},[(index === 8)?_c('div',{staticClass:\"btn\",on:{\"click\":_vm.startGame}},[_vm._v(\"点击开始\")]):_c('div',[_vm._v(\" \"+_vm._s(index))])])]})],2),_vm._v(\" \"),_c('div',{staticClass:\"turntable-form\"},[_c('div',{staticClass:\"turntable-line\"},[_c('div',{staticClass:\"turntable-label\"},[_vm._v(\"\\n        设置最终得奖序号：\\n      \")]),_vm._v(\" \"),_c('div',{staticClass:\"turntable-center\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.giftKey),expression:\"giftKey\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.giftKey)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.giftKey=$event.target.value}}})])])])])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","import './turntable.scss'\nimport Turntable from './turntable.vue'\n\nexport default Turntable\n","/**\n * 统一API方法清单定义文件配置\n * 示例 api (json)\n * 规范：使用API_ACTION_NAME格式（api标识别，方法类型，方法名称）\n * ACTION名称约定：\n * QUERY：查询\n * ADD：添加\n * UPDATE：更新\n * DEL：删除\n * @type {String}\n */\nconst env = process.env.NODE_ENV\nconsole.log('config=' + env)\nlet devApi = '/mock' // 模拟地址 /mock\nconst api = env === 'production' ? '' : devApi\nconst configs = {\n  API_DAtestTA_getPrem: `${api}/promote/standard/getPrem.json`,\n  test1: `${api}/test1.json`\n}\nmodule.exports = configs\n","/**\n * 常量预配置\n * @type {Object}\n */\nconst configs = {\n  chunkMode: true,\n  callApi: true, // 是否调用真实API服务，否则mock服务调试\n  root: '', // 路由根路径,一般在使用虚拟目录跳转时配置\n  mockHost: 'https://www.easy-mock.com/mock/5a38ab6ae859572ed685340b/api', // easy-mock url\n  host: '' // 请求的服务host地址：http://xxxx.zhongan.com/api/xxxx\n}\nmodule.exports = configs\n","import Vue from 'vue'\nimport VueResource from 'vue-resource'\nimport config from '../configs/'\nVue.use(VueResource)\n\nVue.http.options.emulateJSON = false\nVue.http.options.emulateHTTP = true\n\n/**\n * initLoad\n * @authors zhanwang.ye\n * @param  {...[type]} requests [description]\n * @return {[type]}             [description]\n */\nexport const initLoad = requests => {\n  // const $http = Vue.http\n\n  if (requests.length > 0) {\n    let reqlist = []\n    requests.forEach((item, index) => {\n      reqlist.push(item)\n    })\n    return Promise.all(reqlist)\n      .then(data => {\n        return Promise.resolve(data)\n      })\n      .catch(res => {\n        if (!res.ok) {\n          switch (res.status) {\n            case 404:\n              window.location.href = '/404'\n              break\n            default:\n              console.log(res)\n              alert('请求出错了！')\n              break\n          }\n        }\n        return Promise.reject(res)\n      })\n  }\n  return\n}\n\n/**\n * get request\n * @authors zhanwang.ye\n * @param  {[type]} url   [description]\n * @param  {[type]} query [description]\n * @return {[type]}       [description]\n */\nexport const get = (opts) => {\n  let $http = Vue.http\n\n  let url = opts.url\n  let query = opts.data\n\n  return $http\n    .get(config.callApi ? `${config.host}` + url : `${config.mockHost}` + url, {\n      params: query\n    })\n    .then(response => {\n      let res = response.data\n      return Promise.resolve(res)\n    })\n    .catch(err => {\n      console.log(`request get error:`)\n      console.log(err)\n      return Promise.reject(err)\n    })\n}\n\n/**\n * post request\n * @authors zhanwang.ye\n * @param  {[type]} url   [description]\n * @param  {[type]} query [description]\n * @return {[type]}       [description]\n */\nexport const post = (opts) => {\n  let $http = Vue.http\n\n  let url = opts.url\n  let data = opts.data\n  return $http\n    .post(config.callApi ? `${config.host}` + url : `${config.mockHost}` + url, data)\n    .then(response => {\n      let res = response.data\n      return Promise.resolve(res)\n    })\n    .catch(err => {\n      console.log(`request post error:`)\n      console.log(err)\n      return Promise.reject(err)\n    })\n}\n\n/**\n * jsonp request\n * @authors zhanwang.ye\n * @param  {[type]} url   [description]\n * @param  {[type]} query [description]\n * @return {[type]}       [description]\n */\nexport const getJsonp = (url, query) => {\n  let $http = Vue.http\n  return $http\n    .jsonp(config.callApi ? `${config.host}` + url : `${config.mockHost}` + url, query)\n    .then(response => {\n      let res = response.data\n      return Promise.resolve(res)\n    })\n    .catch(err => {\n      console.log(`request jsonp error:`)\n      console.log(err)\n      return Promise.reject(err)\n    })\n}\n/**\n * 表单提交\n * @param string url\n * @param string method  请求方式, POST, GET ...\n * @param object params  请求数据\n */\nexport const formSubmit = ({ url, method, params, target }) => {\n  const hasOwn = {}.hasOwnProperty\n\n  if (typeof window === 'undefined') {\n    console.log(`Not a browser, form submit url: ${url}`)\n    return\n  }\n  const form = document.createElement('form')\n  form.setAttribute('method', method || 'POST')\n  form.setAttribute('action', url)\n  if (target) {\n    form.setAttribute('target', target)\n  }\n  for (const key in params) {\n    if (hasOwn.call(params, key)) {\n      const hiddenField = document.createElement('input')\n      hiddenField.setAttribute('type', 'hidden')\n      hiddenField.setAttribute('name', key)\n      hiddenField.setAttribute('value', params[key])\n      form.appendChild(hiddenField)\n    }\n  }\n  // 解决js脚本调用新窗口导致的拦截问题\n  const submitBtnField = document.createElement('input')\n  submitBtnField.setAttribute('type', 'submit')\n  submitBtnField.setAttribute('style', 'opacity:0;display:block;width:0;height:0')\n  submitBtnField.setAttribute('class', 'zaPayBtn')\n  form.appendChild(submitBtnField)\n\n  document.body.appendChild(form)\n  submitBtnField.onclick = function(ev) {\n    form.submit()\n  }\n  submitBtnField.click()\n}\n\nexport default {\n  initLoad,\n  get,\n  post,\n  getJsonp,\n  formSubmit\n}\n","<template>\n  <div class=\"turntable-content\">\n    <div class=\"turntable-grid\">\n      <template v-for=\"(item,index) in turntableList\">\n        <div :class=\"index === currentIndex ? 'turntable-cell shine' : 'turntable-cell'\" :key=\"index\">\n          <div v-if=\"index === 8\" @click=\"startGame\" class=\"btn\">点击开始</div>\n          <div v-else> {{index}}</div>\n        </div>\n      </template>\n    </div>\n    <div class=\"turntable-form\">\n      <div class=\"turntable-line\">\n        <div class=\"turntable-label\">\n          设置最终得奖序号：\n        </div>\n        <div class=\"turntable-center\">\n          <input type=\"text\" v-model=\"giftKey\">\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as http from '@/utils/http'\nimport * as api from '@/api/'\nimport { setInitParams } from '@/utils/util'\nexport default {\n  name: 'Turntable',\n  data () {\n    return {\n      dataSource: {},\n      anliList: [\n        {\n          interactUrl: '',\n          appId: ''\n        }\n      ], // 安利墙列表\n      page_sessionid: '',\n      page_udid: '',\n      url: '',\n      testName: '',\n\n      turntableList: 9,  // 九宫格转盘\n      currentIndex: '',  // 选中的格子\n      turntableTime1: '',  // 轮盘时间\n      turntableTime2: '',  // 选中的格子\n      giftKey: '',  // 奖品key\n      frequency: 500,  // 跳动频率\n    }\n  },\n  computed: {\n    turntableCell (index) {\n      let className = ['turntable-cell']\n      if (index === this.currentIndex) {\n        className.push('shine')\n      }\n      return className\n    }\n  },\n  created () {\n    // this.handleChange()\n    // this.setInitParams()\n    // this.getData()\n  },\n  methods: {\n    startGame () {\n      const timeout = this.turntableTime1 && this.turntableTime1 !== '' ? this.turntableTime1 : 5\n      const frequency = this.frequency  // 跳动频率\n\n      this.getGift();\n      console.log('------start------')\n      if (!this.currentIndex || this.currentIndex == '') {\n        this.currentIndex = 0\n      }\n\n      const interval = setInterval(() => {\n        console.log(this.currentIndex)\n        if (this.currentIndex < 7) {\n          this.currentIndex = Number(this.currentIndex) + 1\n        } else {\n          this.currentIndex = 0\n        }\n      }, frequency)\n\n      const timer = setTimeout(() => {\n        clearInterval(interval)\n        clearTimeout(timer)\n        this.goGift()\n        console.log('------ end ------')\n      }, timeout * 1000)\n\n      // console.log(timeout)\n    },\n    getGift () {\n      const mockTime = 5;\n      const timer = setTimeout(() => {\n        clearTimeout(timer)\n        if (!this.giftKey) {\n          this.giftKey = 0;\n        }\n        console.log('-----getGift-----')\n      }, mockTime * 1000)\n    },\n    goGift () {\n      const giftKey = this.giftKey\n      const currentIndex = this.currentIndex\n      const frequency = this.frequency  // 跳动频率\n\n      const interval = setInterval(() => {\n        console.log(this.currentIndex)\n        if (this.currentIndex == this.giftKey) {\n          clearInterval(interval)\n          return\n        }\n        if (this.currentIndex < 7) {\n          this.currentIndex = Number(this.currentIndex) + 1\n        } else {\n          this.currentIndex = 0\n        }\n      }, frequency)\n\n      // const timer = setTimeout(() => {\n      //   clearInterval(interval)\n      //   clearTimeout(timer)\n      //   console.log('------ end ------')\n      // }, timeout * 1000)\n    },\n    handleChange (v) {\n      const self = this\n      http.get({\n        url: api.test1\n      }).then(res => {\n        self.testName = res\n      })\n    },\n    linkTo () {\n      const appLink = this.appLink\n      if (appLink && appLink !== '') {\n        window.location.href = appLink\n      } else {\n        return false\n      }\n      // this.number = Number(this.number) + 1\n    },\n    anliLink (interactUrl, appId) {\n      window.location.href = interactUrl + '?session=' + this.page_sessionid + '&appId=' + appId + '&udid=' + this.page_udid\n    },\n    setInitParams () {\n      const query = this.$route.query\n      this.url = setInitParams(query).url\n      this.page_sessionid = setInitParams(query).page_sessionid\n      this.page_udid = setInitParams(query).page_udid\n    },\n    getData () {\n      const self = this\n      $.ajax({\n        url: self.url,\n        dataType: 'jsonp',\n        jsonpCallback: 'jsonp_' + self.page_sessionid.slice(0, 8),\n        data: {\n          r: 'task/app-web-list',\n          session: self.page_sessionid,\n          platform: 'ios'\n        },\n        success: function (data) {\n          if (data.state.code === 0) {\n            self.dataSource = data\n            self.render_html()\n          }\n        }\n      })\n      // http.get({\n      //   url: self.url,\n      //   data: {\n      //     r: 'task/app-web-list',\n      //     session: self.page_sessionid,\n      //     platform: 'ios'\n      //   }\n      // }).then(res => {\n      //   self.testName = res\n      // })\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}